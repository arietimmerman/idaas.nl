

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    
    listen 443;
    listen [::]:443;
    server_name *.notidaas.nl;

    ssl_certificate     /etc/nginx/_wildcard.notidaas.nl.pem;
    ssl_certificate_key /etc/nginx/_wildcard.notidaas.nl-key.pem;

    root /var/www/public;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";

    index index.php index.html index.htm index.nginx-debian.html;

    charset utf-8;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location ~ \.php$ {
        fastcgi_pass php-fpm:9000;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }
}

server {

    listen 443 ssl;
    listen [::]:443 ssl;
    server_name my.notidaas.nl;

    ssl_certificate     /etc/nginx/_wildcard.notidaas.nl.pem;
    ssl_certificate_key /etc/nginx/_wildcard.notidaas.nl-key.pem;

    location /hmr {
        resolver 127.0.0.11 ipv6=off;
        proxy_pass http://node.my-idaas:5173$uri$is_args$args;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location / {
        resolver 127.0.0.11 ipv6=off;
        proxy_pass http://node.my-idaas:5173$uri$is_args$args;
    }

}

server {
   listen       443;
   listen  [::]:443 ssl;
   server_name  minio.notidaas.nl *.minio.notidaas.nl;

   ssl_certificate     /etc/nginx/_wildcard.notidaas.nl.pem;
   ssl_certificate_key /etc/nginx/_wildcard.notidaas.nl-key.pem;

   # Allow special characters in headers
   ignore_invalid_headers off;
   # Allow any size file to be uploaded.
   # Set to a value such as 1000m; to restrict file size to a specific value
   client_max_body_size 0;
   # Disable buffering
   proxy_buffering off;
   proxy_request_buffering off;

   location / {
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass_request_headers      on;
      proxy_connect_timeout 300;
      # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      chunked_transfer_encoding off;

      resolver 127.0.0.11 ipv6=off;
      proxy_pass http://minio:9000; # This uses the upstream directive definition to load balance
   }

   location /minio/ui/ {
      rewrite ^/minio/ui/(.*) /$1 break;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-NginX-Proxy true;

      # This is necessary to pass the correct IP to be hashed
      real_ip_header X-Real-IP;

      proxy_connect_timeout 300;

      # To support websockets in MinIO versions released after January 2023
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      # Some environments may encounter CORS errors (Kubernetes + Nginx Ingress)
      # Uncomment the following line to set the Origin request to an empty string
    #   proxy_set_header Origin '';

      chunked_transfer_encoding off;
    
      resolver 127.0.0.11 ipv6=off;
      proxy_pass http://minio:8900; # This uses the upstream directive definition to load balance
   }
}